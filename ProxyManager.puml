@startuml
class ProxyManager{
      proxy_interval: int
      proxy_error_interval: int
      can_sleep: bool
      formatter_name: default['dict']
      proxy_pool: ProxyPool()
      proxy_loader: ProxyLoader()
      set_formatter()
      set_custom_formatter()
      load_from_txt()
      from_rows()
      __enter__()
      __exit__()
}
class ProxyPool{
    proxy_interval: int
    proxy_error_interval: int
    formatter: formatter
    can_sleep: bool
    proxies: []
    get(formatter_name)
    add_proxy_from_dict()
    set_formatter()
    __enter__()
    __exit__()
}

class ProxyLoader{
    load_from_txt(path, pattern)
    from_rows(rows, parse_pattern)
}

class RowParser{
    parse_pattern
    parse_row()
}
class Proxy{
    ip
    port
    login
    password
    proxy_interval: int
    proxy_error_interval: int
    can_sleep: bool
    formatter: formatter
    set_formatter()
}
class Formatters{
    aiohttp()
    http_requests()
    https_requests()
    dict()

}
ProxyPool *--> Proxy
ProxyManager --> ProxyPool
ProxyManager --> ProxyLoader
ProxyManager ..> Formatters
ProxyLoader ..> RowParser
@enduml